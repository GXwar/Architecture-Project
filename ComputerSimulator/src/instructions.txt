//version:2.4.4
//time 15:14 3/3
//Program 1
INSTRUCTIONS:
//1
//set index register
DATA:
000000001000,0000000001000000
//ix2 <== Addr[8]
//IN r0 IX=00 I=0 Addr=Keyboard
INSTRUCTION:
000010000000,1100010000000000
//STR r0 IX=00 I=0 Addr=64
000010000001,0000100001000000
//2
//IN r0 IX=00 I=0 Addr=Keyboard
000010000010,1100010000000000
//STR r0 IX=00 I=0 Addr=65
000010000011,0000100001000001
//3
//IN r0 IX=00 I=0 Addr=Keyboard
000010000100,1100010000000000
//STR r0 IX=00 I=0 Addr=66
000010000101,0000100001000010
//4
//IN r0 IX=00 I=0 Addr=Keyboard
000010000110,1100010000000000
//STR r0 IX=00 I=0 Addr=67
000010000111,0000100001000011
//5
//IN r0 IX=00 I=0 Addr=Keyboard
000010001000,1100010000000000
//STR r0 IX=00 I=0 Addr=68
000010001001,0000100001000100
//6
//IN r0 IX=00 I=0 Addr=Keyboard
000010001010,1100010000000000
//STR r0 IX=00 I=0 Addr=69
000010001011,0000100001000101
//7
//IN r0 IX=00 I=0 Addr=Keyboard
000010001100,1100010000000000
//STR r0 IX=00 I=0 Addr=70
000010001101,0000100001000110
//8
//IN r0 IX=00 I=0 Addr=Keyboard
000010001110,1100010000000000
//STR r0 IX=00 I=0 Addr=71
000010001111,0000100001000111
//9
//IN r0 IX=00 I=0 Addr=Keyboard
000010010000,1100010000000000
//STR r0 IX=00 I=0 Addr=72
000010010001,0000100001001000
//10
//IN r0 IX=00 I=0 Addr=Keyboard
000010010010,1100010000000000
//STR r0 IX=00 I=0 Addr=73
000010010011,0000100001010001
//11
//IN r0 IX=00 I=0 Addr=Keyboard
000010010100,1100010000000000
//STR r0 IX=00 I=0 Addr=74
000010010101,0000100001001010
//12
//IN r0 IX=00 I=0 Addr=Keyboard
000010010110,1100010000000000
//STR r0 IX=00 I=0 Addr=75
000010010111,0000100001001011
//13
//IN r0 IX=00 I=0 Addr=Keyboard
000010011000,1100010000000000
//STR r0 IX=00 I=0 Addr=76
000010011001,0000100001001100
//14
//IN r0 IX=00 I=0 Addr=Keyboard
000010011010,1100010000000000
//STR r0 IX=00 I=0 Addr=77
000010011011,0000100001001101
//15
//IN r0 IX=00 I=0 Addr=Keyboard
000010011100,1100010000000000
//STR r0 IX=00 I=0 Addr=78
000010011101,0000100001001110
//16
//IN r0 IX=00 I=0 Addr=Keyboard
000010011110,1100010000000000
//STR r0 IX=00 I=0 Addr=79
000010011111,0000100001001111
//17
//IN r0 IX=00 I=0 Addr=Keyboard
000010100000,1100010000000000
//STR r0 IX=00 I=0 Addr=80
000010100001,0000100001010000
//18
//IN r0 IX=00 I=0 Addr=Keyboard
000010100010,1100010000000000
//STR r0 IX=00 I=0 Addr=81
000010100011,0000100001010001
//19
//IN r0 IX=00 I=0 Addr=Keyboard
000010100100,1100010000000000
//STR r0 IX=00 I=0 Addr=82
000010100101,0000100001010010
//20
//IN r0 IX=00 I=0 Addr=Keyboard
000010100110,1100010000000000
//STR r0 IX=00 I=0 Addr=83
000010100111,0000100001010011
//request from user
//IN r0 IX=00 I=0 Addr=Keyboard 
000010101000,1100010000000000
//STR r0 IX=00 I=0 Addr=84
000010101001,0000100001010100
//Addr[88] store r0's content
//int res = -1 ===>r1 
//int min = MAX ====>Addr[85]
//while(Addr[86]<=19+64){
//  r0 = Addr[84]
//  r0 = r0 - Addr[64+Addr[86]]   
//  if(r0<0) abs(r0)
//  if(r0<min){
//     min = r0
//     res = Addr[64+Addr[86]]
//   }
//     Addr[86]++
//}
//    return res ==>r1
//
//
//AIR r1(res)<==-1                                                          1
0001100100011111
//min = MAX ===>Addr[85] , 64==>Addr[87]  19+64==>Addr[89]   64===>Addr86
DATA:
000001010101,0111111111111111
000001010111,0000000001000000
000001011001,0000000001010011
000001010110,0000000001000000
//
//   DATA cong 84 kaishi             
DATA:
000000001000,0000000001010100
//LDX ix1<==Addr[8]                                                        2
1000010001001000
//
//r0 <== Addr[84]                                                           3                                                 
0000010001000000
//
//间接寻址 找86                                                             4
//r0 = r0 - addr(addr(86))
0001010001100010
//if(r0<0)
//JGE >=0 then jump to 8                                                   5
0011110000001000===============
//if < 0 
//r0 = -r0
//NOT r0                                                                    6
0110010000000000
//AIR  r0 +1                                                               7
0001100000000001
//SMR r0<==r0-Addr[85]                                                    8                                                  
0001010001010011
//JGE if(r0>=0) jump :min<=r0                                           9
0011110000011100=========
//r0 <== r0+min                                                          10
0000100001000001
//Addr[85] = R0
// STR  Addr[85] <= r0                                                       11
0000100001000001
//间接寻址 r1<==addr(Addr86)                                               12
0000010101100010
//Addr[86]++
// LDR r0<==Addr[86]                                             13
0000010001000010
// AIR r0+1                                                       14
0001100000000001
// STR r0==>Addr[86]                                                15
0000100001000010
//whle ( 19+64 -Addr[86] >=0) 
//r0 <==19+64
//LDR r0 addr(89)                                           16
0000010001000101
//SMR r0 <= r0-Addr[86]                              17
0001010001000010
//JGE if r0 >=0 then jump to 10 
0011110000001010===========